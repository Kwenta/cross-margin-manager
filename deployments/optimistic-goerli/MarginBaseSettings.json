{
  "address": "0x6A5bFf4b099B03e3988f36bB253EcCd70595a9F5",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_treasury",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tradeFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_limitOrderFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_stopLossFee",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        }
      ],
      "name": "InvalidFee",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ZeroAddress",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        }
      ],
      "name": "LimitOrderFeeChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        }
      ],
      "name": "StopLossFeeChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        }
      ],
      "name": "TradeFeeChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "treasury",
          "type": "address"
        }
      ],
      "name": "TreasuryAddressChanged",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "limitOrderFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        }
      ],
      "name": "setLimitOrderFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        }
      ],
      "name": "setStopLossFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        }
      ],
      "name": "setTradeFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_treasury",
          "type": "address"
        }
      ],
      "name": "setTreasury",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stopLossFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tradeFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "treasury",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x8d827ca25904b792c47be93f561489fb03e90c97aea8ed2da453a11e1dcefe79",
  "receipt": {
    "to": null,
    "from": "0x6e1768574dC439aE6ffCd2b0A0f218105f2612c6",
    "contractAddress": "0x6A5bFf4b099B03e3988f36bB253EcCd70595a9F5",
    "transactionIndex": 0,
    "gasUsed": "811736",
    "logsBloom": "0x
    "blockHash": "0xff2f480a5aa2857b009c8d2189bde7bde89d4357c7d746f462de1d543160eeb5",
    "transactionHash": "0x8d827ca25904b792c47be93f561489fb03e90c97aea8ed2da453a11e1dcefe79",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 730250,
        "transactionHash": "0x8d827ca25904b792c47be93f561489fb03e90c97aea8ed2da453a11e1dcefe79",
        "address": "0x6A5bFf4b099B03e3988f36bB253EcCd70595a9F5",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000006e1768574dc439ae6ffcd2b0a0f218105f2612c6"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0xff2f480a5aa2857b009c8d2189bde7bde89d4357c7d746f462de1d543160eeb5"
      }
    ],
    "blockNumber": 730250,
    "cumulativeGasUsed": "811736",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x6e1768574dC439aE6ffCd2b0A0f218105f2612c6",
    5,
    5,
    5
  ],
  "numDeployments": 1,
  "solcInputHash": "5dc0dee341db4688de81bab703a154c3",
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tradeFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_limitOrderFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_stopLossFee\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"InvalidFee\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"LimitOrderFeeChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"StopLossFeeChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"TradeFeeChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"}],\"name\":\"TreasuryAddressChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"limitOrderFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"setLimitOrderFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"setStopLossFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"setTradeFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"}],\"name\":\"setTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopLossFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradeFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"JaredBorders (jaredborders@proton.me), JChiaramonte7 (jeremy@bytecode.llc)\",\"details\":\"This contract will require deployment prior to MarginBase account creation\",\"errors\":{\"InvalidFee(uint256)\":[{\"params\":{\"fee\":\": fee denoted in BPS\"}}]},\"events\":{\"LimitOrderFeeChanged(uint256)\":{\"params\":{\"fee\":\": fee denoted in BPS\"}},\"StopLossFeeChanged(uint256)\":{\"params\":{\"fee\":\": fee denoted in BPS\"}},\"TradeFeeChanged(uint256)\":{\"params\":{\"fee\":\": fee denoted in BPS\"}},\"TreasuryAddressChanged(address)\":{\"params\":{\"treasury\":\": new treasury address\"}}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_limitOrderFee\":\": fee denoted in BPS\",\"_stopLossFee\":\": fee denoted in BPS\",\"_tradeFee\":\": fee denoted in BPS\",\"_treasury\":\": Kwenta's Treasury Address\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setLimitOrderFee(uint256)\":{\"params\":{\"_fee\":\": fee denoted in BPS\"}},\"setStopLossFee(uint256)\":{\"params\":{\"_fee\":\": fee denoted in BPS\"}},\"setTradeFee(uint256)\":{\"params\":{\"_fee\":\": fee denoted in BPS\"}},\"setTreasury(address)\":{\"params\":{\"_treasury\":\": new treasury address\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"limitOrderFee\":{\"details\":\"fee imposed on limit orders\"},\"stopLossFee\":{\"details\":\"fee imposed on stop losses\"},\"tradeFee\":{\"details\":\"fee imposed on all trades trades: defined as changes made to IMarginBaseTypes.NewPosition.size\"}},\"title\":\"Kwenta Settings for MarginBase Accounts\",\"version\":1},\"userdoc\":{\"errors\":{\"InvalidFee(uint256)\":[{\"notice\":\"invalid fee (fee >= MAX_BPS)\"}],\"ZeroAddress()\":[{\"notice\":\"zero address cannot be used\"}]},\"events\":{\"LimitOrderFeeChanged(uint256)\":{\"notice\":\"emitted after a successful limit order fee change\"},\"StopLossFeeChanged(uint256)\":{\"notice\":\"emitted after a successful stop loss fee change\"},\"TradeFeeChanged(uint256)\":{\"notice\":\"emitted after a successful trade fee change\"},\"TreasuryAddressChanged(address)\":{\"notice\":\"emitted after changing treasury address\"}},\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"set initial margin base account fees\"},\"limitOrderFee()\":{\"notice\":\"denoted in Basis points (BPS) (One basis point is equal to 1/100th of 1%)\"},\"setLimitOrderFee(uint256)\":{\"notice\":\"set new limit order fee\"},\"setStopLossFee(uint256)\":{\"notice\":\"set new stop loss fee\"},\"setTradeFee(uint256)\":{\"notice\":\"set new trade fee\"},\"setTreasury(address)\":{\"notice\":\"set new treasury address\"},\"stopLossFee()\":{\"notice\":\"denoted in Basis points (BPS) (One basis point is equal to 1/100th of 1%)\"},\"tradeFee()\":{\"notice\":\"denoted in Basis points (BPS) (One basis point is equal to 1/100th of 1%)\"}},\"notice\":\"Contract (owned by the deployer) for controlling the settings of MarginBase account(s)\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MarginBaseSettings.sol\":\"MarginBaseSettings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/MarginBaseSettings.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\npragma solidity 0.8.13;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\n/// @title Kwenta Settings for MarginBase Accounts\\n/// @author JaredBorders (jaredborders@proton.me), JChiaramonte7 (jeremy@bytecode.llc)\\n/// @notice Contract (owned by the deployer) for controlling the settings of MarginBase account(s)\\n/// @dev This contract will require deployment prior to MarginBase account creation\\ncontract MarginBaseSettings is Ownable {\\n    /*///////////////////////////////////////////////////////////////\\n                                Constants\\n    ///////////////////////////////////////////////////////////////*/\\n\\n    /// @notice decimals calculations\\n    uint256 private constant MAX_BPS = 10000;\\n\\n    /*///////////////////////////////////////////////////////////////\\n                        Settings\\n    ///////////////////////////////////////////////////////////////*/\\n\\n    // @notice Kwenta's Treasury Address\\n    address public treasury;\\n\\n    /// @notice denoted in Basis points (BPS) (One basis point is equal to 1/100th of 1%)\\n    /// @dev fee imposed on all trades \\n    /// @dev trades: defined as changes made to IMarginBaseTypes.NewPosition.size\\n    uint256 public tradeFee;\\n\\n    /// @notice denoted in Basis points (BPS) (One basis point is equal to 1/100th of 1%)\\n    /// @dev fee imposed on limit orders\\n    uint256 public limitOrderFee;\\n\\n    /// @notice denoted in Basis points (BPS) (One basis point is equal to 1/100th of 1%)\\n    /// @dev fee imposed on stop losses\\n    uint256 public stopLossFee;\\n\\n    /*///////////////////////////////////////////////////////////////\\n                                Events\\n    ///////////////////////////////////////////////////////////////*/\\n\\n    /// @notice emitted after changing treasury address\\n    /// @param treasury: new treasury address\\n    event TreasuryAddressChanged(address treasury);\\n\\n    /// @notice emitted after a successful trade fee change\\n    /// @param fee: fee denoted in BPS\\n    event TradeFeeChanged(uint256 fee);\\n\\n    /// @notice emitted after a successful limit order fee change\\n    /// @param fee: fee denoted in BPS\\n    event LimitOrderFeeChanged(uint256 fee);\\n\\n    /// @notice emitted after a successful stop loss fee change\\n    /// @param fee: fee denoted in BPS\\n    event StopLossFeeChanged(uint256 fee);\\n\\n    /*///////////////////////////////////////////////////////////////\\n                                Errors\\n    ///////////////////////////////////////////////////////////////*/\\n\\n    /// @notice zero address cannot be used\\n    error ZeroAddress();\\n\\n    /// @notice invalid fee (fee >= MAX_BPS)\\n    /// @param fee: fee denoted in BPS\\n    error InvalidFee(uint256 fee);\\n\\n    /*///////////////////////////////////////////////////////////////\\n                            Constructor\\n    ///////////////////////////////////////////////////////////////*/\\n\\n    /// @notice set initial margin base account fees\\n    /// @param _treasury: Kwenta's Treasury Address\\n    /// @param _tradeFee: fee denoted in BPS\\n    /// @param _limitOrderFee: fee denoted in BPS\\n    /// @param _stopLossFee: fee denoted in BPS\\n    constructor(\\n        address _treasury,\\n        uint256 _tradeFee,\\n        uint256 _limitOrderFee,\\n        uint256 _stopLossFee\\n    ) {\\n        /// @notice ensure valid address for Kwenta Treasury\\n        if (_treasury == address(0)) { revert ZeroAddress(); }\\n        \\n        /// @notice set Kwenta Treasury address \\n        treasury = _treasury;\\n\\n        /// @notice ensure valid fees\\n        if (_tradeFee >= MAX_BPS) { revert InvalidFee(_tradeFee); }\\n        if (_limitOrderFee >= MAX_BPS) { revert InvalidFee(_limitOrderFee); }\\n        if (_stopLossFee >= MAX_BPS) { revert InvalidFee(_stopLossFee); }\\n\\n        /// @notice set initial fees\\n        tradeFee = _tradeFee;\\n        limitOrderFee = _limitOrderFee;\\n        stopLossFee = _stopLossFee;\\n    }\\n\\n    /*///////////////////////////////////////////////////////////////\\n                                Setters\\n    ///////////////////////////////////////////////////////////////*/\\n\\n    /// @notice set new treasury address\\n    /// @param _treasury: new treasury address\\n    function setTreasury(address _treasury) external onlyOwner {\\n        /// @notice ensure valid address for Kwenta Treasury\\n        if (_treasury == address(0)) { revert ZeroAddress(); }\\n\\n        /// @notice set Kwenta Treasury address\\n        treasury = _treasury;\\n\\n        emit TreasuryAddressChanged(_treasury);\\n    }\\n\\n    /// @notice set new trade fee\\n    /// @param _fee: fee denoted in BPS\\n    function setTradeFee(uint256 _fee) external onlyOwner {\\n        /// @notice ensure valid fee\\n        if (_fee >= MAX_BPS) { revert InvalidFee(_fee); }\\n\\n        /// @notice set fee\\n        tradeFee = _fee;\\n\\n        emit TradeFeeChanged(_fee);\\n    }\\n\\n    /// @notice set new limit order fee\\n    /// @param _fee: fee denoted in BPS\\n    function setLimitOrderFee(uint256 _fee) external onlyOwner {\\n        /// @notice ensure valid fee\\n        if (_fee >= MAX_BPS) { revert InvalidFee(_fee); }\\n\\n        /// @notice set fee\\n        limitOrderFee = _fee;\\n\\n        emit LimitOrderFeeChanged(_fee);\\n    }\\n\\n    /// @notice set new stop loss fee\\n    /// @param _fee: fee denoted in BPS\\n    function setStopLossFee(uint256 _fee) external onlyOwner {\\n        /// @notice ensure valid fee\\n        if (_fee >= MAX_BPS) { revert InvalidFee(_fee); }\\n\\n        /// @notice set fee\\n        stopLossFee = _fee;\\n\\n        emit StopLossFeeChanged(_fee);\\n    }\\n}\\n\",\"keccak256\":\"0x4dfb207e10690a91c2c31a08b331c2a26a395674d87aedeab0efa1de60de3f5e\",\"license\":\"GPL-3.0-or-later\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162000f9238038062000f9283398181016040528101906200003791906200036a565b620000576200004b620001f960201b60201c565b6200020160201b60201c565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603620000be576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b83600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061271083106200014857826040517f2f38c6ee0000000000000000000000000000000000000000000000000000000081526004016200013f9190620003ed565b60405180910390fd5b61271082106200019157816040517f2f38c6ee000000000000000000000000000000000000000000000000000000008152600401620001889190620003ed565b60405180910390fd5b6127108110620001da57806040517f2f38c6ee000000000000000000000000000000000000000000000000000000008152600401620001d19190620003ed565b60405180910390fd5b826002819055508160038190555080600481905550505050506200040a565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620002f782620002ca565b9050919050565b6200030981620002ea565b81146200031557600080fd5b50565b6000815190506200032981620002fe565b92915050565b6000819050919050565b62000344816200032f565b81146200035057600080fd5b50565b600081519050620003648162000339565b92915050565b60008060008060808587031215620003875762000386620002c5565b5b6000620003978782880162000318565b9450506020620003aa8782880162000353565b9350506040620003bd8782880162000353565b9250506060620003d08782880162000353565b91505092959194509250565b620003e7816200032f565b82525050565b6000602082019050620004046000830184620003dc565b92915050565b610b78806200041a6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806361d027b31161007157806361d027b31461013e578063715018a61461015c5780638da5cb5b14610166578063c08a74f214610184578063f0f44260146101a2578063f2fde38b146101be576100a9565b806310603023146100ae57806324bcdfbd146100ca57806327ca1009146100e85780634049e56214610106578063458edd7414610122575b600080fd5b6100c860048036038101906100c39190610927565b6101da565b005b6100d26102dd565b6040516100df9190610963565b60405180910390f35b6100f06102e3565b6040516100fd9190610963565b60405180910390f35b610120600480360381019061011b9190610927565b6102e9565b005b61013c60048036038101906101379190610927565b6103ec565b005b6101466104ef565b60405161015391906109bf565b60405180910390f35b610164610515565b005b61016e61059d565b60405161017b91906109bf565b60405180910390f35b61018c6105c6565b6040516101999190610963565b60405180910390f35b6101bc60048036038101906101b79190610a06565b6105cc565b005b6101d860048036038101906101d39190610a06565b610729565b005b6101e2610820565b73ffffffffffffffffffffffffffffffffffffffff1661020061059d565b73ffffffffffffffffffffffffffffffffffffffff1614610256576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024d90610a90565b60405180910390fd5b612710811061029c57806040517f2f38c6ee0000000000000000000000000000000000000000000000000000000081526004016102939190610963565b60405180910390fd5b806002819055507ff0e2ab1868f9bae31bda39e0675a42ea0e3b42d3493c88758f0382bf0e9b0496816040516102d29190610963565b60405180910390a150565b60025481565b60035481565b6102f1610820565b73ffffffffffffffffffffffffffffffffffffffff1661030f61059d565b73ffffffffffffffffffffffffffffffffffffffff1614610365576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035c90610a90565b60405180910390fd5b61271081106103ab57806040517f2f38c6ee0000000000000000000000000000000000000000000000000000000081526004016103a29190610963565b60405180910390fd5b806004819055507f93ee2bbb1792bfbdf68fbf44da5ae3114214cc28c20bcbd422939ca46aaf8412816040516103e19190610963565b60405180910390a150565b6103f4610820565b73ffffffffffffffffffffffffffffffffffffffff1661041261059d565b73ffffffffffffffffffffffffffffffffffffffff1614610468576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045f90610a90565b60405180910390fd5b61271081106104ae57806040517f2f38c6ee0000000000000000000000000000000000000000000000000000000081526004016104a59190610963565b60405180910390fd5b806003819055507f64ad89be1344628009ffc29a2d5a09191c3ee4f4241b1ce6d52e4e877d9aede0816040516104e49190610963565b60405180910390a150565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61051d610820565b73ffffffffffffffffffffffffffffffffffffffff1661053b61059d565b73ffffffffffffffffffffffffffffffffffffffff1614610591576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058890610a90565b60405180910390fd5b61059b6000610828565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60045481565b6105d4610820565b73ffffffffffffffffffffffffffffffffffffffff166105f261059d565b73ffffffffffffffffffffffffffffffffffffffff1614610648576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063f90610a90565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106ae576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f9073dfac663173e64aa95665faedae52e2246f9bcdd3890fbfaf6733b46bba138160405161071e91906109bf565b60405180910390a150565b610731610820565b73ffffffffffffffffffffffffffffffffffffffff1661074f61059d565b73ffffffffffffffffffffffffffffffffffffffff16146107a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079c90610a90565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610814576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080b90610b22565b60405180910390fd5b61081d81610828565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b6000819050919050565b610904816108f1565b811461090f57600080fd5b50565b600081359050610921816108fb565b92915050565b60006020828403121561093d5761093c6108ec565b5b600061094b84828501610912565b91505092915050565b61095d816108f1565b82525050565b60006020820190506109786000830184610954565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006109a98261097e565b9050919050565b6109b98161099e565b82525050565b60006020820190506109d460008301846109b0565b92915050565b6109e38161099e565b81146109ee57600080fd5b50565b600081359050610a00816109da565b92915050565b600060208284031215610a1c57610a1b6108ec565b5b6000610a2a848285016109f1565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610a7a602083610a33565b9150610a8582610a44565b602082019050919050565b60006020820190508181036000830152610aa981610a6d565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610b0c602683610a33565b9150610b1782610ab0565b604082019050919050565b60006020820190508181036000830152610b3b81610aff565b905091905056fea264697066735822122007eacc30ab7a633b8f69de987eb29ad017832267d88acf9049b089a1355017bd64736f6c634300080d0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100a95760003560e01c806361d027b31161007157806361d027b31461013e578063715018a61461015c5780638da5cb5b14610166578063c08a74f214610184578063f0f44260146101a2578063f2fde38b146101be576100a9565b806310603023146100ae57806324bcdfbd146100ca57806327ca1009146100e85780634049e56214610106578063458edd7414610122575b600080fd5b6100c860048036038101906100c39190610927565b6101da565b005b6100d26102dd565b6040516100df9190610963565b60405180910390f35b6100f06102e3565b6040516100fd9190610963565b60405180910390f35b610120600480360381019061011b9190610927565b6102e9565b005b61013c60048036038101906101379190610927565b6103ec565b005b6101466104ef565b60405161015391906109bf565b60405180910390f35b610164610515565b005b61016e61059d565b60405161017b91906109bf565b60405180910390f35b61018c6105c6565b6040516101999190610963565b60405180910390f35b6101bc60048036038101906101b79190610a06565b6105cc565b005b6101d860048036038101906101d39190610a06565b610729565b005b6101e2610820565b73ffffffffffffffffffffffffffffffffffffffff1661020061059d565b73ffffffffffffffffffffffffffffffffffffffff1614610256576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024d90610a90565b60405180910390fd5b612710811061029c57806040517f2f38c6ee0000000000000000000000000000000000000000000000000000000081526004016102939190610963565b60405180910390fd5b806002819055507ff0e2ab1868f9bae31bda39e0675a42ea0e3b42d3493c88758f0382bf0e9b0496816040516102d29190610963565b60405180910390a150565b60025481565b60035481565b6102f1610820565b73ffffffffffffffffffffffffffffffffffffffff1661030f61059d565b73ffffffffffffffffffffffffffffffffffffffff1614610365576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035c90610a90565b60405180910390fd5b61271081106103ab57806040517f2f38c6ee0000000000000000000000000000000000000000000000000000000081526004016103a29190610963565b60405180910390fd5b806004819055507f93ee2bbb1792bfbdf68fbf44da5ae3114214cc28c20bcbd422939ca46aaf8412816040516103e19190610963565b60405180910390a150565b6103f4610820565b73ffffffffffffffffffffffffffffffffffffffff1661041261059d565b73ffffffffffffffffffffffffffffffffffffffff1614610468576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045f90610a90565b60405180910390fd5b61271081106104ae57806040517f2f38c6ee0000000000000000000000000000000000000000000000000000000081526004016104a59190610963565b60405180910390fd5b806003819055507f64ad89be1344628009ffc29a2d5a09191c3ee4f4241b1ce6d52e4e877d9aede0816040516104e49190610963565b60405180910390a150565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61051d610820565b73ffffffffffffffffffffffffffffffffffffffff1661053b61059d565b73ffffffffffffffffffffffffffffffffffffffff1614610591576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058890610a90565b60405180910390fd5b61059b6000610828565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60045481565b6105d4610820565b73ffffffffffffffffffffffffffffffffffffffff166105f261059d565b73ffffffffffffffffffffffffffffffffffffffff1614610648576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063f90610a90565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106ae576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f9073dfac663173e64aa95665faedae52e2246f9bcdd3890fbfaf6733b46bba138160405161071e91906109bf565b60405180910390a150565b610731610820565b73ffffffffffffffffffffffffffffffffffffffff1661074f61059d565b73ffffffffffffffffffffffffffffffffffffffff16146107a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079c90610a90565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610814576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080b90610b22565b60405180910390fd5b61081d81610828565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b6000819050919050565b610904816108f1565b811461090f57600080fd5b50565b600081359050610921816108fb565b92915050565b60006020828403121561093d5761093c6108ec565b5b600061094b84828501610912565b91505092915050565b61095d816108f1565b82525050565b60006020820190506109786000830184610954565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006109a98261097e565b9050919050565b6109b98161099e565b82525050565b60006020820190506109d460008301846109b0565b92915050565b6109e38161099e565b81146109ee57600080fd5b50565b600081359050610a00816109da565b92915050565b600060208284031215610a1c57610a1b6108ec565b5b6000610a2a848285016109f1565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610a7a602083610a33565b9150610a8582610a44565b602082019050919050565b60006020820190508181036000830152610aa981610a6d565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610b0c602683610a33565b9150610b1782610ab0565b604082019050919050565b60006020820190508181036000830152610b3b81610aff565b905091905056fea264697066735822122007eacc30ab7a633b8f69de987eb29ad017832267d88acf9049b089a1355017bd64736f6c634300080d0033",
  "devdoc": {
    "author": "JaredBorders (jaredborders@proton.me), JChiaramonte7 (jeremy@bytecode.llc)",
    "details": "This contract will require deployment prior to MarginBase account creation",
    "errors": {
      "InvalidFee(uint256)": [
        {
          "params": {
            "fee": ": fee denoted in BPS"
          }
        }
      ]
    },
    "events": {
      "LimitOrderFeeChanged(uint256)": {
        "params": {
          "fee": ": fee denoted in BPS"
        }
      },
      "StopLossFeeChanged(uint256)": {
        "params": {
          "fee": ": fee denoted in BPS"
        }
      },
      "TradeFeeChanged(uint256)": {
        "params": {
          "fee": ": fee denoted in BPS"
        }
      },
      "TreasuryAddressChanged(address)": {
        "params": {
          "treasury": ": new treasury address"
        }
      }
    },
    "kind": "dev",
    "methods": {
      "constructor": {
        "params": {
          "_limitOrderFee": ": fee denoted in BPS",
          "_stopLossFee": ": fee denoted in BPS",
          "_tradeFee": ": fee denoted in BPS",
          "_treasury": ": Kwenta's Treasury Address"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setLimitOrderFee(uint256)": {
        "params": {
          "_fee": ": fee denoted in BPS"
        }
      },
      "setStopLossFee(uint256)": {
        "params": {
          "_fee": ": fee denoted in BPS"
        }
      },
      "setTradeFee(uint256)": {
        "params": {
          "_fee": ": fee denoted in BPS"
        }
      },
      "setTreasury(address)": {
        "params": {
          "_treasury": ": new treasury address"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "stateVariables": {
      "limitOrderFee": {
        "details": "fee imposed on limit orders"
      },
      "stopLossFee": {
        "details": "fee imposed on stop losses"
      },
      "tradeFee": {
        "details": "fee imposed on all trades trades: defined as changes made to IMarginBaseTypes.NewPosition.size"
      }
    },
    "title": "Kwenta Settings for MarginBase Accounts",
    "version": 1
  },
  "userdoc": {
    "errors": {
      "InvalidFee(uint256)": [
        {
          "notice": "invalid fee (fee >= MAX_BPS)"
        }
      ],
      "ZeroAddress()": [
        {
          "notice": "zero address cannot be used"
        }
      ]
    },
    "events": {
      "LimitOrderFeeChanged(uint256)": {
        "notice": "emitted after a successful limit order fee change"
      },
      "StopLossFeeChanged(uint256)": {
        "notice": "emitted after a successful stop loss fee change"
      },
      "TradeFeeChanged(uint256)": {
        "notice": "emitted after a successful trade fee change"
      },
      "TreasuryAddressChanged(address)": {
        "notice": "emitted after changing treasury address"
      }
    },
    "kind": "user",
    "methods": {
      "constructor": {
        "notice": "set initial margin base account fees"
      },
      "limitOrderFee()": {
        "notice": "denoted in Basis points (BPS) (One basis point is equal to 1/100th of 1%)"
      },
      "setLimitOrderFee(uint256)": {
        "notice": "set new limit order fee"
      },
      "setStopLossFee(uint256)": {
        "notice": "set new stop loss fee"
      },
      "setTradeFee(uint256)": {
        "notice": "set new trade fee"
      },
      "setTreasury(address)": {
        "notice": "set new treasury address"
      },
      "stopLossFee()": {
        "notice": "denoted in Basis points (BPS) (One basis point is equal to 1/100th of 1%)"
      },
      "tradeFee()": {
        "notice": "denoted in Basis points (BPS) (One basis point is equal to 1/100th of 1%)"
      }
    },
    "notice": "Contract (owned by the deployer) for controlling the settings of MarginBase account(s)",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/MarginBaseSettings.sol:MarginBaseSettings",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 2591,
        "contract": "contracts/MarginBaseSettings.sol:MarginBaseSettings",
        "label": "treasury",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 2594,
        "contract": "contracts/MarginBaseSettings.sol:MarginBaseSettings",
        "label": "tradeFee",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 2597,
        "contract": "contracts/MarginBaseSettings.sol:MarginBaseSettings",
        "label": "limitOrderFee",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 2600,
        "contract": "contracts/MarginBaseSettings.sol:MarginBaseSettings",
        "label": "stopLossFee",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}